"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function () {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
    }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
}();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

var Path = function () {
    function Path(node) {
        var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var parentKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

        _classCallCheck(this, Path);

        this.node = node;
        this.parent = parent;
        this.parentKey = parentKey;
    }

    Path.prototype.parents = function parents() {
        var _this = this,
            _ref;

        return _ref = {}, _ref[Symbol.iterator] = function () {
            return new PathParentsIterator(_this);
        }, _ref;
    };

    _createClass(Path, [{
        key: "parentNode",
        get: function get() {
            return this.parent ? this.parent.node : null;
        }
    }]);

    return Path;
}();

exports.default = Path;


var PathParentsIterator = function () {
    function PathParentsIterator(path) {
        _classCallCheck(this, PathParentsIterator);

        this.path = path;
    }

    PathParentsIterator.prototype.next = function next() {
        if (this.path.parent) {
            this.path = this.path.parent;
            return { done: false, value: this.path };
        } else {
            return { done: true, value: null };
        }
    };

    return PathParentsIterator;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3N5bnRheC9saWIvdHJhdmVyc2FsL3BhdGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRWMsTztBQUtaLGFBQUEsSUFBQSxDQUFBLElBQUEsRUFBc0Y7QUFBQSxZQUFqRSxTQUFpRSxVQUFBLE1BQUEsR0FBQSxDQUFBLElBQUEsVUFBQSxDQUFBLE1BQUEsU0FBQSxHQUFBLFVBQUEsQ0FBQSxDQUFBLEdBQXRGLElBQXNGO0FBQUEsWUFBL0IsWUFBK0IsVUFBQSxNQUFBLEdBQUEsQ0FBQSxJQUFBLFVBQUEsQ0FBQSxNQUFBLFNBQUEsR0FBQSxVQUFBLENBQUEsQ0FBQSxHQUF0RixJQUFzRjs7QUFBQSx3QkFBQSxJQUFBLEVBQUEsSUFBQTs7QUFDcEYsYUFBQSxJQUFBLEdBQUEsSUFBQTtBQUNBLGFBQUEsTUFBQSxHQUFBLE1BQUE7QUFDQSxhQUFBLFNBQUEsR0FBQSxTQUFBO0FBQ0Q7O21CQU1ELE8sc0JBQU87QUFBQSxZQUFBLFFBQUEsSUFBQTtBQUFBLFlBQUEsSUFBQTs7QUFDTCxlQUFBLE9BQUEsRUFBQSxFQUFBLEtBQ0csT0FESCxRQUFBLElBQ3FCLFlBQUs7QUFDdEIsbUJBQU8sSUFBQSxtQkFBQSxDQUFQLEtBQU8sQ0FBUDtBQUZKLFNBQUEsRUFBQSxJQUFBOzs7Ozs0QkFMWTtBQUNaLG1CQUFPLEtBQUEsTUFBQSxHQUFjLEtBQUEsTUFBQSxDQUFkLElBQUEsR0FBUCxJQUFBO0FBQ0Q7Ozs7OztrQkFiVyxJOzs7SUF3QmQsc0I7QUFHRSxhQUFBLG1CQUFBLENBQUEsSUFBQSxFQUE0QjtBQUFBLHdCQUFBLElBQUEsRUFBQSxtQkFBQTs7QUFDMUIsYUFBQSxJQUFBLEdBQUEsSUFBQTtBQUNEOztrQ0FFRCxJLG1CQUFJO0FBQ0YsWUFBSSxLQUFBLElBQUEsQ0FBSixNQUFBLEVBQXNCO0FBQ3BCLGlCQUFBLElBQUEsR0FBWSxLQUFBLElBQUEsQ0FBWixNQUFBO0FBQ0EsbUJBQU8sRUFBRSxNQUFGLEtBQUEsRUFBZSxPQUFPLEtBQTdCLElBQU8sRUFBUDtBQUZGLFNBQUEsTUFHTztBQUNMLG1CQUFPLEVBQUUsTUFBRixJQUFBLEVBQWMsT0FBckIsSUFBTyxFQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOb2RlIH0gZnJvbSAnLi4vdHlwZXMvbm9kZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXRoPE4gZXh0ZW5kcyBOb2RlPiB7XG4gIG5vZGU6IE47XG4gIHBhcmVudDogUGF0aDxOb2RlPiB8IG51bGw7XG4gIHBhcmVudEtleTogc3RyaW5nIHwgbnVsbDtcblxuICBjb25zdHJ1Y3Rvcihub2RlOiBOLCBwYXJlbnQ6IFBhdGg8Tm9kZT4gfCBudWxsID0gbnVsbCwgcGFyZW50S2V5OiBzdHJpbmcgfCBudWxsID0gbnVsbCkge1xuICAgIHRoaXMubm9kZSA9IG5vZGU7XG4gICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgdGhpcy5wYXJlbnRLZXkgPSBwYXJlbnRLZXk7XG4gIH1cblxuICBnZXQgcGFyZW50Tm9kZSgpOiBOb2RlIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMucGFyZW50ID8gdGhpcy5wYXJlbnQubm9kZSA6IG51bGw7XG4gIH1cblxuICBwYXJlbnRzKCk6IEl0ZXJhYmxlPFBhdGg8Tm9kZT4gfCBudWxsPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFtTeW1ib2wuaXRlcmF0b3JdOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgUGF0aFBhcmVudHNJdGVyYXRvcih0aGlzKTtcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxufVxuXG5jbGFzcyBQYXRoUGFyZW50c0l0ZXJhdG9yIGltcGxlbWVudHMgSXRlcmF0b3I8UGF0aDxOb2RlPiB8IG51bGw+IHtcbiAgcGF0aDogUGF0aDxOb2RlPjtcblxuICBjb25zdHJ1Y3RvcihwYXRoOiBQYXRoPE5vZGU+KSB7XG4gICAgdGhpcy5wYXRoID0gcGF0aDtcbiAgfVxuXG4gIG5leHQoKSB7XG4gICAgaWYgKHRoaXMucGF0aC5wYXJlbnQpIHtcbiAgICAgIHRoaXMucGF0aCA9IHRoaXMucGF0aC5wYXJlbnQ7XG4gICAgICByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IHRoaXMucGF0aCB9O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbnVsbCB9O1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==